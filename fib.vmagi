        addi #1, 39, #1   -- 0 depth is 5
        push #1           -- 1 push depth to parameters
        call @fib         -- 2 call fib(n)
        pop #1            -- 3 pop the return
        halt #1           -- 4 exit with the return

fib:    pop #1           -- 5 pop the n param
        jmpz #1, @base0  -- 6 if n==0, jump to @base0
        eqi  #1, 1, #2   -- 7 set #2 = #1 == 1
        jmpt #2, @base1  -- 8 if #1 == 1, jump to @base1
        subi #1, 1, #1   -- 9 set #1 = n - 1
        push #1          -- 10 push n-1 to stack
        call @fib        -- 11 call fib(n-1)
        pop #2           -- 12 pop result of fib(n-1) to #2
        subi #1, 1, #1   -- 13 set #1 = (n - 1) - 1 = n - 2
        push #1          -- 14 push n-2 to stack
        call @fib        -- 15 call fib(n-2)
        pop #1           -- 16 pop result of fib(n-2) to #1
        add #1, #2, #1   -- 17 set #1 = #1 + #2 = fib(n-2) + fib(n-1)
        push #1          -- 18 push the fib result to stack
        ret              -- 19 return
        
base0:  pushi 1          -- 20 push 1 to stack
        ret              -- 21 return
        
base1:  pushi 1          -- 22 push 1 to stack
        ret              -- 23 return